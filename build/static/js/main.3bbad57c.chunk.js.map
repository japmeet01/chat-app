{"version":3,"sources":["misc/firebase.js","pages/SignIn.js","context/profile.context.js","components/PrivateRoute.js","misc/custom-hooks.js","components/EditableInput.js","components/dashboard/ProviderBlock.js","misc/helpers.js","components/ProfileAvatar.js","components/dashboard/AvatarUploadBtn.js","components/dashboard/index.js","components/dashboard/DashboardToggle.js","components/CreateRoomBtnModal.js","components/rooms/RoomItem.js","context/rooms.context.js","components/rooms/ChatRoomList.js","components/Sidebar.js","context/current-room.context.js","components/chat-window/top/RoomInfoBtnModal.js","components/chat-window/top/EditRoomBtnDrawer.js","components/chat-window/top/index.js","components/chat-window/bottom/AttachmentBtnModal.js","components/chat-window/bottom/AudioMsgBtn.js","components/chat-window/bottom/index.js","components/chat-window/messages/ProfileInfoBtnModal.js","components/PresenceDot.js","components/chat-window/messages/IconBtnControl.js","components/chat-window/messages/ImgBtnModal.js","components/chat-window/messages/MessageItem.js","components/chat-window/messages/index.js","pages/Home/Chat.js","pages/Home/index.js","components/PublicRoute.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","storage","SignIn","signInWithProvider","provider","a","signInWithPopup","additionalUserInfo","user","isNewUser","ref","uid","set","name","displayName","createdAt","ServerValue","TIMESTAMP","Alert","success","error","message","Container","Grid","className","Row","Col","xs","md","mdOffset","Panel","Button","block","color","onClick","FacebookAuthProvider","Icon","icon","GoogleAuthProvider","isOfflineForDatabase","state","last_changed","isOnlineForDatabase","ProfileContext","createContext","ProfileProvider","children","useState","profile","setProfile","isLoading","setIsLoading","useEffect","userRef","userStatusRef","authUnsub","onAuthStateChanged","authObj","on","snap","val","data","avatar","email","snapshot","onDisconnect","then","off","Provider","value","useProfile","useContext","PrivateRoute","routeProps","Loader","center","vertical","size","content","speed","to","useModalState","defaultValue","isOpen","setIsOpen","open","useCallback","close","useMediaQuery","query","window","matchMedia","matches","setMatches","queryList","listener","evt","addListener","removeListener","EditableInput","initialValue","onSave","label","placeholder","emptyMsg","wrapperClassName","inputProps","input","setInput","isEditable","setIsEditable","onInputChange","onEditClick","p","onSaveClick","trimmed","trim","info","InputGroup","Input","disabled","onChange","ProviderBlock","currentUser","providerData","some","providerId","isConnected","setIsConnected","updateIsConnected","unlink","length","Error","link","linkWithPopup","Tag","closable","onClose","transformToArrWithId","snapVal","Object","keys","map","roomId","id","getUserUpdates","userId","keyToUpdate","db","updates","getMsgs","orderByChild","equalTo","once","getRooms","Promise","all","mSnap","rSnap","forEach","msgSnap","key","roomSnap","ProfileAvatar","avatarProps","Avatar","circle","splitName","toUpperCase","split","getNameInitials","acceptedFileTypes","getBlob","canvas","resolve","reject","toBlob","blob","AvatarUploadBtn","img","setImg","avatarEditorRef","useRef","onUploadClick","current","getImageScaledToCanvas","avatarFileRef","child","put","cacheControl","uploadAvatarResult","getDownloadURL","downloadUrl","update","src","htmlFor","type","accept","ev","currFiles","target","files","file","includes","isValidFile","warning","Modal","show","onHide","Header","Title","Body","image","width","height","border","borderRadius","rotate","Footer","appearance","Dashboard","onSignOut","newData","Drawer","Divider","DashboardToggle","isMobile","signOut","catch","err","full","placement","StringType","Schema","Types","model","Model","isRequired","description","INITIAL_FORM","CreateRoomBtnModal","formValue","setFormValue","formRef","onFormChange","onSubmit","check","newRoomdata","admins","push","Form","fluid","FormGroup","ControlLabel","FormControl","componentClass","rows","RoomItem","room","lastMessage","datetime","Date","author","text","RoomsContext","RoomsProvider","rooms","setRooms","roomListRef","useRooms","ChatRoomList","aboveElHeight","location","useLocation","Nav","reversed","style","activeKey","pathname","Item","Link","eventKey","Sidebar","topSidebarRef","setHeight","scrollHeight","CurrentRoomContext","CurrentRoomProvider","useCurrentRoom","selector","useContextSelector","memo","v","chatId","useParams","updateData","newName","newDesc","isAdmin","ButtonToolbar","AttachmentBtnModal","afterUpload","fileList","setFileList","onUpload","uploadPromises","f","now","blobFile","uploadSnapshots","shapePromises","metadata","contentType","url","Uploader","autoUpload","action","fileArr","filtered","filter","el","slice","multiple","listType","AudioMsgBtn","isRecording","setIsRecording","isUploading","setIsUploading","record","onStop","mimeType","assembleMessage","likeCount","Bottom","onSendClick","msgData","messageId","msgId","lastMsgId","pop","onKeyDown","keyCode","preventDefault","ProfileInfoBtnModal","btnProps","shortName","memberSince","toLocaleDateString","getColor","presence","getText","PresenceDot","setPresence","exists","usePresence","Whisper","trigger","speaker","Tooltip","Badge","backgroundColor","ConditionalBadge","condition","IconBtnControl","isVisible","iconName","tooltip","badgeContent","props","visibility","delay","delayHide","delayShow","IconButton","ImgBtnModal","fileName","alt","href","rel","handleAdmin","handleLike","handleDelete","likes","setValue","handleMouseOver","handleMouseOut","node","addEventListener","removeEventListener","useHover","selfRef","isHovered","isMsgAuthorAdmin","isAuthor","canGrantAdmin","canShowIcons","isLiked","controls","renderFileMessage","messagesRef","Messages","messages","setMessages","limit","setLimit","isChatEmpty","canShowMessages","loadMessages","limitToLast","threshold","percentage","scrollTop","clientHeight","shouldScrollToBottom","onLoadMore","oldHeight","setTimeout","newHeight","adminsRef","transaction","alertMsg","messageRef","msg","confirm","isLast","fileRef","refFromURL","delete","groupingKeyFn","groups","item","toDateString","reduce","result","groupingKey","items","date","msgs","renderMessages","Chat","currentRoom","find","currentRoomData","Home","isDesktop","isExact","useRouteMatch","canRenderSidebar","exact","path","PublicRoute","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3bbad57c.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport \"firebase/storage\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyAd_fVH90WIZ9vVUdewWISyK5I2MBSn5DU\",\r\n  authDomain: \"chat-d5bb6.firebaseapp.com\",\r\n  databaseURL:\r\n    \"https://chat-d5bb6-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"chat-d5bb6\",\r\n  storageBucket: \"chat-d5bb6.appspot.com\",\r\n  messagingSenderId: \"766882374089\",\r\n  appId: \"1:766882374089:web:f0c90cdc0aaf067473c818\",\r\n};\r\n\r\nconst app = firebase.initializeApp(config);\r\nexport const auth = app.auth();\r\nexport const database = app.database();\r\nexport const storage = app.storage();\r\n","import React from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport { Container, Grid, Row, Panel, Col, Button, Icon, Alert } from \"rsuite\";\r\nimport { auth, database } from \"../misc/firebase\";\r\n\r\nconst SignIn = () => {\r\n  const signInWithProvider = async (provider) => {\r\n    try {\r\n      const { additionalUserInfo, user } = await auth.signInWithPopup(provider);\r\n\r\n      if (additionalUserInfo.isNewUser) {\r\n        await database.ref(`/profiles/${user.uid}`).set({\r\n          name: user.displayName,\r\n          createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n        });\r\n      }\r\n\r\n      Alert.success(\"Signed in\", 4000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  const onFacebookSignIn = () => {\r\n    signInWithProvider(new firebase.auth.FacebookAuthProvider());\r\n  };\r\n\r\n  const onGoogleSignIn = () => {\r\n    signInWithProvider(new firebase.auth.GoogleAuthProvider());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Grid className=\"mt-page\">\r\n        <Row>\r\n          <Col xs={24} md={12} mdOffset={6}>\r\n            <Panel>\r\n              <div className=\"text-center\">\r\n                <h2>Welcome to Let's Chat</h2>\r\n                <p>Create your own chat rooms or join other's</p>\r\n              </div>\r\n\r\n              <div className=\"mt-3\">\r\n                <Button block color=\"blue\" onClick={onFacebookSignIn}>\r\n                  <Icon icon=\"facebook\" /> Continue with Facebook\r\n                </Button>\r\n\r\n                <Button block color=\"green\" onClick={onGoogleSignIn}>\r\n                  <Icon icon=\"google\" /> Continue with Google\r\n                </Button>\r\n              </div>\r\n            </Panel>\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport { auth, database } from '../misc/firebase';\r\n\r\nexport const isOfflineForDatabase = {\r\n  state: 'offline',\r\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst isOnlineForDatabase = {\r\n  state: 'online',\r\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst ProfileContext = createContext();\r\n\r\nexport const ProfileProvider = ({ children }) => {\r\n  const [profile, setProfile] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let userRef;\r\n    let userStatusRef;\r\n\r\n    const authUnsub = auth.onAuthStateChanged(authObj => {\r\n      if (authObj) {\r\n        userStatusRef = database.ref(`/status/${authObj.uid}`);\r\n        userRef = database.ref(`/profiles/${authObj.uid}`);\r\n\r\n        userRef.on('value', snap => {\r\n          const { name, createdAt, avatar } = snap.val();\r\n\r\n          const data = {\r\n            name,\r\n            createdAt,\r\n            avatar,\r\n            uid: authObj.uid,\r\n            email: authObj.email,\r\n          };\r\n\r\n          setProfile(data);\r\n          setIsLoading(false);\r\n        });\r\n\r\n        database.ref('.info/connected').on('value', snapshot => {\r\n          if (!!snapshot.val() === false) {\r\n            return;\r\n          }\r\n\r\n          userStatusRef\r\n            .onDisconnect()\r\n            .set(isOfflineForDatabase)\r\n            .then(() => {\r\n              userStatusRef.set(isOnlineForDatabase);\r\n            });\r\n        });\r\n      } else {\r\n        if (userRef) {\r\n          userRef.off();\r\n        }\r\n\r\n        if (userStatusRef) {\r\n          userStatusRef.off();\r\n        }\r\n\r\n        database.ref('.info/connected').off();\r\n\r\n        setProfile(null);\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      authUnsub();\r\n\r\n      database.ref('.info/connected').off();\r\n\r\n      if (userRef) {\r\n        userRef.off();\r\n      }\r\n\r\n      if (userStatusRef) {\r\n        userStatusRef.off();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <ProfileContext.Provider value={{ isLoading, profile }}>\r\n      {children}\r\n    </ProfileContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useProfile = () => useContext(ProfileContext);\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nconst PrivateRoute = ({ children, ...routeProps }) => {\r\n  const { profile, isLoading } = useProfile();\r\n\r\n  if (isLoading && !profile) {\r\n    return (\r\n      <Container>\r\n        <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (!profile && !isLoading) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n\r\n  return <Route {...routeProps}>{children}</Route>;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { useState, useCallback, useEffect, useRef } from 'react';\r\nimport { database } from './firebase';\r\n\r\nexport function useModalState(defaultValue = false) {\r\n  const [isOpen, setIsOpen] = useState(defaultValue);\r\n\r\n  const open = useCallback(() => setIsOpen(true), []);\r\n  const close = useCallback(() => setIsOpen(false), []);\r\n\r\n  return { isOpen, open, close };\r\n}\r\n\r\nexport const useMediaQuery = query => {\r\n  const [matches, setMatches] = useState(\r\n    () => window.matchMedia(query).matches\r\n  );\r\n\r\n  useEffect(() => {\r\n    const queryList = window.matchMedia(query);\r\n    setMatches(queryList.matches);\r\n\r\n    const listener = evt => setMatches(evt.matches);\r\n\r\n    queryList.addListener(listener);\r\n    return () => queryList.removeListener(listener);\r\n  }, [query]);\r\n\r\n  return matches;\r\n};\r\n\r\nexport function usePresence(uid) {\r\n  const [presence, setPresence] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const userStatusRef = database.ref(`/status/${uid}`);\r\n\r\n    userStatusRef.on('value', snap => {\r\n      if (snap.exists()) {\r\n        const data = snap.val();\r\n\r\n        setPresence(data);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      userStatusRef.off();\r\n    };\r\n  }, [uid]);\r\n\r\n  return presence;\r\n}\r\n\r\nexport function useHover() {\r\n  const [value, setValue] = useState(false);\r\n\r\n  const ref = useRef(null);\r\n\r\n  const handleMouseOver = () => setValue(true);\r\n  const handleMouseOut = () => setValue(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      const node = ref.current;\r\n      if (node) {\r\n        node.addEventListener('mouseover', handleMouseOver);\r\n        node.addEventListener('mouseout', handleMouseOut);\r\n      }\r\n      return () => {\r\n        node.removeEventListener('mouseover', handleMouseOver);\r\n        node.removeEventListener('mouseout', handleMouseOut);\r\n      };\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [ref.current] // Recall only if ref changes\r\n  );\r\n\r\n  return [ref, value];\r\n}\r\n","import React, { useState, useCallback } from 'react';\r\nimport { Input, InputGroup, Icon, Alert } from 'rsuite';\r\n\r\nconst EditableInput = ({\r\n  initialValue,\r\n  onSave,\r\n  label = null,\r\n  placeholder = 'Write your value',\r\n  emptyMsg = 'Input is empty',\r\n  wrapperClassName = '',\r\n  ...inputProps\r\n}) => {\r\n  const [input, setInput] = useState(initialValue);\r\n  const [isEditable, setIsEditable] = useState(false);\r\n\r\n  const onInputChange = useCallback(value => {\r\n    setInput(value);\r\n  }, []);\r\n\r\n  const onEditClick = useCallback(() => {\r\n    setIsEditable(p => !p);\r\n    setInput(initialValue);\r\n  }, [initialValue]);\r\n\r\n  const onSaveClick = async () => {\r\n    const trimmed = input.trim();\r\n\r\n    if (trimmed === '') {\r\n      Alert.info(emptyMsg, 4000);\r\n    }\r\n\r\n    if (trimmed !== initialValue) {\r\n      await onSave(trimmed);\r\n    }\r\n\r\n    setIsEditable(false);\r\n  };\r\n\r\n  return (\r\n    <div className={wrapperClassName}>\r\n      {label}\r\n      <InputGroup>\r\n        <Input\r\n          {...inputProps}\r\n          disabled={!isEditable}\r\n          placeholder={placeholder}\r\n          value={input}\r\n          onChange={onInputChange}\r\n        />\r\n        <InputGroup.Button onClick={onEditClick}>\r\n          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n        </InputGroup.Button>\r\n        {isEditable && (\r\n          <InputGroup.Button onClick={onSaveClick}>\r\n            <Icon icon=\"check\" />\r\n          </InputGroup.Button>\r\n        )}\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditableInput;\r\n","import React, { useState } from 'react';\r\nimport { Tag, Icon, Button, Alert } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { auth } from '../../misc/firebase';\r\n\r\nconst ProviderBlock = () => {\r\n  const [isConnected, setIsConnected] = useState({\r\n    'google.com': auth.currentUser.providerData.some(\r\n      data => data.providerId === 'google.com'\r\n    ),\r\n    'facebook.com': auth.currentUser.providerData.some(\r\n      data => data.providerId === 'facebook.com'\r\n    ),\r\n  });\r\n\r\n  const updateIsConnected = (providerId, value) => {\r\n    setIsConnected(p => {\r\n      return {\r\n        ...p,\r\n        [providerId]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const unlink = async providerId => {\r\n    try {\r\n      if (auth.currentUser.providerData.length === 1) {\r\n        throw new Error(`You can not disconnect from ${providerId}`);\r\n      }\r\n\r\n      await auth.currentUser.unlink(providerId);\r\n      updateIsConnected(providerId, false);\r\n      Alert.info(`Disconnected from ${providerId}`, 4000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  const unlinkFacebook = () => {\r\n    unlink('facebook.com');\r\n  };\r\n  const unlinkGoogle = () => {\r\n    unlink('google.com');\r\n  };\r\n\r\n  const link = async provider => {\r\n    try {\r\n      await auth.currentUser.linkWithPopup(provider);\r\n      Alert.info(`Linked to ${provider.providerId}`, 4000);\r\n      updateIsConnected(provider.providerId, true);\r\n    } catch (err) {\r\n      Alert.error(err.message, 400);\r\n    }\r\n  };\r\n\r\n  const linkFacebook = () => {\r\n    link(new firebase.auth.FacebookAuthProvider());\r\n  };\r\n  const linkGoogle = () => {\r\n    link(new firebase.auth.GoogleAuthProvider());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isConnected['google.com'] && (\r\n        <Tag color=\"green\" closable onClose={unlinkGoogle}>\r\n          <Icon icon=\"google\" /> Connected\r\n        </Tag>\r\n      )}\r\n      {isConnected['facebook.com'] && (\r\n        <Tag color=\"blue\" closable onClose={unlinkFacebook}>\r\n          <Icon icon=\"facebook\" /> Connected\r\n        </Tag>\r\n      )}\r\n\r\n      <div className=\"mt-2\">\r\n        {!isConnected['google.com'] && (\r\n          <Button block color=\"green\" onClick={linkGoogle}>\r\n            <Icon icon=\"google\" /> Link to Google\r\n          </Button>\r\n        )}\r\n\r\n        {!isConnected['facebook.com'] && (\r\n          <Button block color=\"blue\" onClick={linkFacebook}>\r\n            <Icon icon=\"facebook\" /> Link to Facebook\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProviderBlock;\r\n","export function getNameInitials(name) {\r\n  const splitName = name.toUpperCase().split(' ');\r\n\r\n  if (splitName.length > 1) {\r\n    return splitName[0][0] + splitName[1][0];\r\n  }\r\n\r\n  return splitName[0][0];\r\n}\r\n\r\nexport function transformToArr(snapVal) {\r\n  return snapVal ? Object.keys(snapVal) : [];\r\n}\r\n\r\nexport function transformToArrWithId(snapVal) {\r\n  return snapVal\r\n    ? Object.keys(snapVal).map(roomId => {\r\n        return { ...snapVal[roomId], id: roomId };\r\n      })\r\n    : [];\r\n}\r\n\r\nexport async function getUserUpdates(userId, keyToUpdate, value, db) {\r\n  const updates = {};\r\n\r\n  updates[`/profiles/${userId}/${keyToUpdate}`] = value;\r\n\r\n  const getMsgs = db\r\n    .ref('/messages')\r\n    .orderByChild('author/uid')\r\n    .equalTo(userId)\r\n    .once('value');\r\n\r\n  const getRooms = db\r\n    .ref('/rooms')\r\n    .orderByChild('lastMessage/author/uid')\r\n    .equalTo(userId)\r\n    .once('value');\r\n\r\n  const [mSnap, rSnap] = await Promise.all([getMsgs, getRooms]);\r\n\r\n  mSnap.forEach(msgSnap => {\r\n    updates[`/messages/${msgSnap.key}/author/${keyToUpdate}`] = value;\r\n  });\r\n\r\n  rSnap.forEach(roomSnap => {\r\n    updates[`/rooms/${roomSnap.key}/lastMessage/author/${keyToUpdate}`] = value;\r\n  });\r\n\r\n  return updates;\r\n}\r\n\r\nexport function groupBy(array, groupingKeyFn) {\r\n  return array.reduce((result, item) => {\r\n    const groupingKey = groupingKeyFn(item);\r\n\r\n    if (!result[groupingKey]) {\r\n      result[groupingKey] = [];\r\n    }\r\n\r\n    result[groupingKey].push(item);\r\n\r\n    return result;\r\n  }, {});\r\n}\r\n","import React from 'react';\r\nimport { Avatar } from 'rsuite';\r\nimport { getNameInitials } from '../misc/helpers';\r\n\r\nconst ProfileAvatar = ({ name, ...avatarProps }) => {\r\n  return (\r\n    <Avatar circle {...avatarProps}>\r\n      {getNameInitials(name)}\r\n    </Avatar>\r\n  );\r\n};\r\n\r\nexport default ProfileAvatar;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Modal, Button, Alert } from \"rsuite\";\r\nimport AvatarEditor from \"react-avatar-editor\";\r\nimport { useModalState } from \"../../misc/custom-hooks\";\r\nimport { storage, database } from \"../../misc/firebase\";\r\nimport { useProfile } from \"../../context/profile.context\";\r\nimport ProfileAvatar from \"../ProfileAvatar\";\r\nimport { getUserUpdates } from \"../../misc/helpers\";\r\n\r\nconst fileInputTypes = \".png, .jpeg, .jpg\";\r\n\r\nconst acceptedFileTypes = [\"image/png\", \"image/jpeg\", \"image/pjpeg\"];\r\nconst isValidFile = (file) => acceptedFileTypes.includes(file.type);\r\n\r\nconst getBlob = (canvas) => {\r\n  return new Promise((resolve, reject) => {\r\n    canvas.toBlob((blob) => {\r\n      if (blob) {\r\n        resolve(blob);\r\n      } else {\r\n        reject(new Error(\"File process error\"));\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst AvatarUploadBtn = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n\r\n  const { profile } = useProfile();\r\n  const [img, setImg] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const avatarEditorRef = useRef();\r\n\r\n  const onFileInputChange = (ev) => {\r\n    const currFiles = ev.target.files;\r\n\r\n    if (currFiles.length === 1) {\r\n      const file = currFiles[0];\r\n\r\n      if (isValidFile(file)) {\r\n        setImg(file);\r\n\r\n        open();\r\n      } else {\r\n        Alert.warning(`Wrong file type ${file.type}`, 4000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onUploadClick = async () => {\r\n    const canvas = avatarEditorRef.current.getImageScaledToCanvas();\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      const blob = await getBlob(canvas);\r\n\r\n      const avatarFileRef = storage\r\n        .ref(`/profile/${profile.uid}`)\r\n        .child(\"avatar\");\r\n\r\n      const uploadAvatarResult = await avatarFileRef.put(blob, {\r\n        cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n      });\r\n\r\n      const downloadUrl = await uploadAvatarResult.ref.getDownloadURL();\r\n\r\n      const updates = await getUserUpdates(\r\n        profile.uid,\r\n        \"avatar\",\r\n        downloadUrl,\r\n        database\r\n      );\r\n\r\n      await database.ref().update(updates);\r\n\r\n      setIsLoading(false);\r\n      Alert.info(\"Avatar has been uploaded\", 4000);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-3 text-center\">\r\n      <ProfileAvatar\r\n        src={profile.avatar}\r\n        name={profile.name}\r\n        className=\"width-200 height-200 img-fullsize font-huge\"\r\n      />\r\n\r\n      <div>\r\n        <label\r\n          htmlFor=\"avatar-upload\"\r\n          className=\"d-block cursor-pointer padded\"\r\n        >\r\n          Select new avatar\r\n          <input\r\n            id=\"avatar-upload\"\r\n            type=\"file\"\r\n            className=\"d-none\"\r\n            accept={fileInputTypes}\r\n            onChange={onFileInputChange}\r\n          />\r\n        </label>\r\n\r\n        <Modal show={isOpen} onHide={close}>\r\n          <Modal.Header>\r\n            <Modal.Title>Adjust and upload new avatar</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n              {img && (\r\n                <AvatarEditor\r\n                  ref={avatarEditorRef}\r\n                  image={img}\r\n                  width={200}\r\n                  height={200}\r\n                  border={10}\r\n                  borderRadius={100}\r\n                  rotate={0}\r\n                />\r\n              )}\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              block\r\n              appearance=\"ghost\"\r\n              onClick={onUploadClick}\r\n              disabled={isLoading}\r\n            >\r\n              Upload new avatar\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AvatarUploadBtn;\r\n","import React from 'react';\r\nimport { Drawer, Button, Divider, Alert } from 'rsuite';\r\nimport { useProfile } from '../../context/profile.context';\r\nimport EditableInput from '../EditableInput';\r\nimport { database } from '../../misc/firebase';\r\nimport ProviderBlock from './ProviderBlock';\r\nimport AvatarUploadBtn from './AvatarUploadBtn';\r\nimport { getUserUpdates } from '../../misc/helpers';\r\n\r\nconst Dashboard = ({ onSignOut }) => {\r\n  const { profile } = useProfile();\r\n\r\n  const onSave = async newData => {\r\n    try {\r\n      const updates = await getUserUpdates(\r\n        profile.uid,\r\n        'name',\r\n        newData,\r\n        database\r\n      );\r\n\r\n      await database.ref().update(updates);\r\n\r\n      Alert.success('Nickname has been updated', 4000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Drawer.Header>\r\n        <Drawer.Title>Dashboard</Drawer.Title>\r\n      </Drawer.Header>\r\n\r\n      <Drawer.Body>\r\n        <h3>Hey, {profile.name}</h3>\r\n        <ProviderBlock />\r\n        <Divider />\r\n        <EditableInput\r\n          name=\"nickname\"\r\n          initialValue={profile.name}\r\n          onSave={onSave}\r\n          label={<h6 className=\"mb-2\">Nickname</h6>}\r\n        />\r\n        <AvatarUploadBtn />\r\n      </Drawer.Body>\r\n\r\n      <Drawer.Footer>\r\n        <Button block color=\"red\" onClick={onSignOut}>\r\n          Sign out\r\n        </Button>\r\n      </Drawer.Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useCallback } from 'react';\r\nimport { Button, Icon, Drawer, Alert } from 'rsuite';\r\nimport { useModalState, useMediaQuery } from '../../misc/custom-hooks';\r\nimport Dashboard from '.';\r\nimport { auth, database } from '../../misc/firebase';\r\nimport { isOfflineForDatabase } from '../../context/profile.context';\r\n\r\nconst DashboardToggle = () => {\r\n  const { isOpen, close, open } = useModalState();\r\n  const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  const onSignOut = useCallback(() => {\r\n    database\r\n      .ref(`/status/${auth.currentUser.uid}`)\r\n      .set(isOfflineForDatabase)\r\n      .then(() => {\r\n        auth.signOut();\r\n        Alert.info('Signed out', 4000);\r\n        close();\r\n      })\r\n      .catch(err => {\r\n        Alert.error(err.message, 4000);\r\n      });\r\n  }, [close]);\r\n\r\n  return (\r\n    <>\r\n      <Button block color=\"blue\" onClick={open}>\r\n        <Icon icon=\"dashboard\" /> Dashboard\r\n      </Button>\r\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"left\">\r\n        <Dashboard onSignOut={onSignOut} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardToggle;\r\n","import React, { useState, useCallback, useRef } from 'react';\r\nimport {\r\n  Button,\r\n  Icon,\r\n  Modal,\r\n  Form,\r\n  ControlLabel,\r\n  FormControl,\r\n  FormGroup,\r\n  Schema,\r\n  Alert,\r\n} from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { useModalState } from '../misc/custom-hooks';\r\nimport { database, auth } from '../misc/firebase';\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nconst model = Schema.Model({\r\n  name: StringType().isRequired('Chat name is required'),\r\n  description: StringType().isRequired('Description is required'),\r\n});\r\n\r\nconst INITIAL_FORM = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\nconst CreateRoomBtnModal = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n\r\n  const [formValue, setFormValue] = useState(INITIAL_FORM);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const formRef = useRef();\r\n\r\n  const onFormChange = useCallback(value => {\r\n    setFormValue(value);\r\n  }, []);\r\n\r\n  const onSubmit = async () => {\r\n    if (!formRef.current.check()) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    const newRoomdata = {\r\n      ...formValue,\r\n      createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n      admins: {\r\n        [auth.currentUser.uid]: true,\r\n      },\r\n    };\r\n\r\n    try {\r\n      await database.ref('rooms').push(newRoomdata);\r\n\r\n      Alert.info(`${formValue.name} has been created`, 4000);\r\n\r\n      setIsLoading(false);\r\n      setFormValue(INITIAL_FORM);\r\n      close();\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-1\">\r\n      <Button block color=\"green\" onClick={open}>\r\n        <Icon icon=\"creative\" /> Create new chat room\r\n      </Button>\r\n\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>New chat room</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form\r\n            fluid\r\n            onChange={onFormChange}\r\n            formValue={formValue}\r\n            model={model}\r\n            ref={formRef}\r\n          >\r\n            <FormGroup>\r\n              <ControlLabel>Room name</ControlLabel>\r\n              <FormControl name=\"name\" placeholder=\"Enter chat room name...\" />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <ControlLabel>Description</ControlLabel>\r\n              <FormControl\r\n                componentClass=\"textarea\"\r\n                rows={5}\r\n                name=\"description\"\r\n                placeholder=\"Enter room description...\"\r\n              />\r\n            </FormGroup>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            block\r\n            appearance=\"primary\"\r\n            onClick={onSubmit}\r\n            disabled={isLoading}\r\n          >\r\n            Create new chat room\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateRoomBtnModal;\r\n","import React from 'react';\r\nimport TimeAgo from 'timeago-react';\r\nimport ProfileAvatar from '../ProfileAvatar';\r\n\r\nconst RoomItem = ({ room }) => {\r\n  const { createdAt, name, lastMessage } = room;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <h3 className=\"text-disappear\">{name}</h3>\r\n        <TimeAgo\r\n          datetime={\r\n            lastMessage ? new Date(lastMessage.createdAt) : new Date(createdAt)\r\n          }\r\n          className=\"font-normal text-black-45\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"d-flex align-items-center text-black-70\">\r\n        {lastMessage ? (\r\n          <>\r\n            <div className=\"d-flex align-items-center\">\r\n              <ProfileAvatar\r\n                src={lastMessage.author.avatar}\r\n                name={lastMessage.author.name}\r\n                size=\"sm\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"text-disappear ml-2\">\r\n              <div className=\"italic\">{lastMessage.author.name}</div>\r\n              <span>{lastMessage.text || lastMessage.file.name}</span>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <span>No messages yet...</span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomItem;\r\n","import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { database } from '../misc/firebase';\r\nimport { transformToArrWithId } from '../misc/helpers';\r\n\r\nconst RoomsContext = createContext();\r\n\r\nexport const RoomsProvider = ({ children }) => {\r\n  const [rooms, setRooms] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const roomListRef = database.ref('rooms');\r\n\r\n    roomListRef.on('value', snap => {\r\n      const data = transformToArrWithId(snap.val());\r\n      setRooms(data);\r\n    });\r\n\r\n    return () => {\r\n      roomListRef.off();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <RoomsContext.Provider value={rooms}>{children}</RoomsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useRooms = () => useContext(RoomsContext);\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Nav, Loader } from 'rsuite';\r\nimport RoomItem from './RoomItem';\r\nimport { useRooms } from '../../context/rooms.context';\r\n\r\nconst ChatRoomList = ({ aboveElHeight }) => {\r\n  const rooms = useRooms();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Nav\r\n      appearance=\"subtle\"\r\n      vertical\r\n      reversed\r\n      className=\"overflow-y-scroll custom-scroll\"\r\n      style={{\r\n        height: `calc(100% - ${aboveElHeight}px)`,\r\n      }}\r\n      activeKey={location.pathname}\r\n    >\r\n      {!rooms && (\r\n        <Loader center vertical content=\"Loading\" speed=\"slow\" size=\"md\" />\r\n      )}\r\n      {rooms &&\r\n        rooms.length > 0 &&\r\n        rooms.map(room => (\r\n          <Nav.Item\r\n            componentClass={Link}\r\n            to={`/chat/${room.id}`}\r\n            key={room.id}\r\n            eventKey={`/chat/${room.id}`}\r\n          >\r\n            <RoomItem room={room} />\r\n          </Nav.Item>\r\n        ))}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default ChatRoomList;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { Divider } from 'rsuite';\r\nimport DashboardToggle from './dashboard/DashboardToggle';\r\nimport CreateRoomBtnModal from './CreateRoomBtnModal';\r\nimport ChatRoomList from './rooms/ChatRoomList';\r\n\r\nconst Sidebar = () => {\r\n  const topSidebarRef = useRef();\r\n  const [height, setHeight] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (topSidebarRef.current) {\r\n      setHeight(topSidebarRef.current.scrollHeight);\r\n    }\r\n  }, [topSidebarRef]);\r\n\r\n  return (\r\n    <div className=\"h-100 pt-2\">\r\n      <div ref={topSidebarRef}>\r\n        <DashboardToggle />\r\n        <CreateRoomBtnModal />\r\n        <Divider>Join conversation</Divider>\r\n      </div>\r\n      <ChatRoomList aboveElHeight={height} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport { createContext, useContextSelector } from 'use-context-selector';\r\n\r\nconst CurrentRoomContext = createContext();\r\n\r\nexport const CurrentRoomProvider = ({ children, data }) => {\r\n  return (\r\n    <CurrentRoomContext.Provider value={data}>\r\n      {children}\r\n    </CurrentRoomContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCurrentRoom = selector =>\r\n  useContextSelector(CurrentRoomContext, selector);\r\n","import React, { memo } from 'react';\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\n\r\nconst RoomInfoBtnModal = () => {\r\n  const { isOpen, close, open } = useModalState();\r\n  const description = useCurrentRoom(v => v.description);\r\n  const name = useCurrentRoom(v => v.name);\r\n\r\n  return (\r\n    <>\r\n      <Button appearance=\"link\" className=\"px-0\" onClick={open}>\r\n        Room information\r\n      </Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>About {name}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h6 className=\"mb-1\">Description</h6>\r\n          <p>{description}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(RoomInfoBtnModal);\r\n","import React, { memo } from 'react';\r\nimport { Button, Drawer, Alert } from 'rsuite';\r\nimport { useParams } from 'react-router';\r\nimport { useModalState, useMediaQuery } from '../../../misc/custom-hooks';\r\nimport EditableInput from '../../EditableInput';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { database } from '../../../misc/firebase';\r\n\r\nconst EditRoomBtnDrawer = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const { chatId } = useParams();\r\n  const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  const name = useCurrentRoom(v => v.name);\r\n  const description = useCurrentRoom(v => v.description);\r\n\r\n  const updateData = (key, value) => {\r\n    database\r\n      .ref(`rooms/${chatId}`)\r\n      .child(key)\r\n      .set(value)\r\n      .then(() => {\r\n        Alert.success('Successfully updated', 4000);\r\n      })\r\n      .catch(err => {\r\n        Alert.error(err.message, 4000);\r\n      });\r\n  };\r\n\r\n  const onNameSave = newName => {\r\n    updateData('name', newName);\r\n  };\r\n\r\n  const onDescriptionSave = newDesc => {\r\n    updateData('description', newDesc);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"br-circle\" size=\"sm\" color=\"red\" onClick={open}>\r\n        A\r\n      </Button>\r\n\r\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"right\">\r\n        <Drawer.Header>\r\n          <Drawer.Title>Edit Room</Drawer.Title>\r\n        </Drawer.Header>\r\n        <Drawer.Body>\r\n          <EditableInput\r\n            initialValue={name}\r\n            onSave={onNameSave}\r\n            label={<h6 className=\"mb-2\">Name</h6>}\r\n            emptyMsg=\"Name can not be empty\"\r\n          />\r\n          <EditableInput\r\n            componentClass=\"textarea\"\r\n            rows={5}\r\n            initialValue={description}\r\n            onSave={onDescriptionSave}\r\n            emptyMsg=\"Description can not be empty\"\r\n            wrapperClassName=\"mt-3\"\r\n          />\r\n        </Drawer.Body>\r\n        <Drawer.Footer>\r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Drawer.Footer>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(EditRoomBtnDrawer);\r\n","import React, { memo } from 'react';\r\nimport { Icon, ButtonToolbar } from 'rsuite';\r\nimport { Link } from 'react-router-dom';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { useMediaQuery } from '../../../misc/custom-hooks';\r\nimport RoomInfoBtnModal from './RoomInfoBtnModal';\r\nimport EditRoomBtnDrawer from './EditRoomBtnDrawer';\r\n\r\nconst Top = () => {\r\n  const name = useCurrentRoom(v => v.name);\r\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\r\n  const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <h4 className=\"text-disappear d-flex align-items-center\">\r\n          <Icon\r\n            componentClass={Link}\r\n            to=\"/\"\r\n            icon=\"arrow-circle-left\"\r\n            size=\"2x\"\r\n            className={\r\n              isMobile\r\n                ? 'd-inline-block p-0 mr-2 text-blue link-unstyled'\r\n                : 'd-none'\r\n            }\r\n          />\r\n          <span className=\"text-disappear\">{name}</span>\r\n        </h4>\r\n\r\n        <ButtonToolbar className=\"ws-nowrap\">\r\n          {isAdmin && <EditRoomBtnDrawer />}\r\n        </ButtonToolbar>\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <span>todo</span>\r\n        <RoomInfoBtnModal />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Top);\r\n","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { InputGroup, Icon, Modal, Button, Uploader, Alert } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport { storage } from '../../../misc/firebase';\r\n\r\nconst MAX_FILE_SIZE = 1000 * 1024 * 5;\r\n\r\nconst AttachmentBtnModal = ({ afterUpload }) => {\r\n  const { chatId } = useParams();\r\n  const { isOpen, close, open } = useModalState();\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const onChange = fileArr => {\r\n    const filtered = fileArr\r\n      .filter(el => el.blobFile.size <= MAX_FILE_SIZE)\r\n      .slice(0, 5);\r\n\r\n    setFileList(filtered);\r\n  };\r\n\r\n  const onUpload = async () => {\r\n    try {\r\n      const uploadPromises = fileList.map(f => {\r\n        return storage\r\n          .ref(`/chat/${chatId}`)\r\n          .child(Date.now() + f.name)\r\n          .put(f.blobFile, {\r\n            cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n          });\r\n      });\r\n\r\n      const uploadSnapshots = await Promise.all(uploadPromises);\r\n\r\n      const shapePromises = uploadSnapshots.map(async snap => {\r\n        return {\r\n          contentType: snap.metadata.contentType,\r\n          name: snap.metadata.name,\r\n          url: await snap.ref.getDownloadURL(),\r\n        };\r\n      });\r\n\r\n      const files = await Promise.all(shapePromises);\r\n\r\n      await afterUpload(files);\r\n\r\n      setIsLoading(false);\r\n      close();\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <InputGroup.Button onClick={open}>\r\n        <Icon icon=\"attachment\" />\r\n      </InputGroup.Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>Upload files</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Uploader\r\n            autoUpload={false}\r\n            action=\"\"\r\n            fileList={fileList}\r\n            onChange={onChange}\r\n            multiple\r\n            listType=\"picture-text\"\r\n            className=\"w-100\"\r\n            disabled={isLoading}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button block disabled={isLoading} onClick={onUpload}>\r\n            Send to chat\r\n          </Button>\r\n          <div className=\"text-right mt-2\">\r\n            <small>* only files less than 5 mb are allowed</small>\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AttachmentBtnModal;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { InputGroup, Icon, Alert } from 'rsuite';\r\nimport { ReactMic } from 'react-mic';\r\nimport { useParams } from 'react-router';\r\nimport { storage } from '../../../misc/firebase';\r\n\r\nconst AudioMsgBtn = ({ afterUpload }) => {\r\n  const { chatId } = useParams();\r\n\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n\r\n  const onClick = useCallback(() => {\r\n    setIsRecording(p => !p);\r\n  }, []);\r\n\r\n  const onUpload = useCallback(\r\n    async data => {\r\n      setIsUploading(true);\r\n      try {\r\n        const snap = await storage\r\n          .ref(`/chat/${chatId}`)\r\n          .child(`audio_${Date.now()}.mp3`)\r\n          .put(data.blob, {\r\n            cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n          });\r\n\r\n        const file = {\r\n          contentType: snap.metadata.contentType,\r\n          name: snap.metadata.name,\r\n          url: await snap.ref.getDownloadURL(),\r\n        };\r\n\r\n        setIsUploading(false);\r\n        afterUpload([file]);\r\n      } catch (error) {\r\n        setIsUploading(false);\r\n        Alert.error(error.message);\r\n      }\r\n    },\r\n    [afterUpload, chatId]\r\n  );\r\n\r\n  return (\r\n    <InputGroup.Button\r\n      onClick={onClick}\r\n      disabled={isUploading}\r\n      className={isRecording ? 'animate-blink' : ''}\r\n    >\r\n      <Icon icon=\"microphone\" />\r\n      <ReactMic\r\n        record={isRecording}\r\n        className=\"d-none\"\r\n        onStop={onUpload}\r\n        mimeType=\"audio/mp3\"\r\n      />\r\n    </InputGroup.Button>\r\n  );\r\n};\r\n\r\nexport default AudioMsgBtn;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { InputGroup, Input, Icon, Alert } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { useParams } from 'react-router';\r\nimport { useProfile } from '../../../context/profile.context';\r\nimport { database } from '../../../misc/firebase';\r\nimport AttachmentBtnModal from './AttachmentBtnModal';\r\nimport AudioMsgBtn from './AudioMsgBtn';\r\n\r\nfunction assembleMessage(profile, chatId) {\r\n  return {\r\n    roomId: chatId,\r\n    author: {\r\n      name: profile.name,\r\n      uid: profile.uid,\r\n      createdAt: profile.createdAt,\r\n      ...(profile.avatar ? { avatar: profile.avatar } : {}),\r\n    },\r\n    createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n    likeCount: 0,\r\n  };\r\n}\r\n\r\nconst Bottom = () => {\r\n  const [input, setInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { chatId } = useParams();\r\n  const { profile } = useProfile();\r\n\r\n  const onInputChange = useCallback(value => {\r\n    setInput(value);\r\n  }, []);\r\n\r\n  const onSendClick = async () => {\r\n    if (input.trim() === '') {\r\n      return;\r\n    }\r\n\r\n    const msgData = assembleMessage(profile, chatId);\r\n    msgData.text = input;\r\n\r\n    const updates = {};\r\n\r\n    const messageId = database.ref('messages').push().key;\r\n\r\n    updates[`/messages/${messageId}`] = msgData;\r\n    updates[`/rooms/${chatId}/lastMessage`] = {\r\n      ...msgData,\r\n      msgId: messageId,\r\n    };\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      await database.ref().update(updates);\r\n\r\n      setInput('');\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message);\r\n    }\r\n  };\r\n\r\n  const onKeyDown = ev => {\r\n    if (ev.keyCode === 13) {\r\n      ev.preventDefault();\r\n      onSendClick();\r\n    }\r\n  };\r\n\r\n  const afterUpload = useCallback(\r\n    async files => {\r\n      setIsLoading(true);\r\n\r\n      const updates = {};\r\n\r\n      files.forEach(file => {\r\n        const msgData = assembleMessage(profile, chatId);\r\n        msgData.file = file;\r\n\r\n        const messageId = database.ref('messages').push().key;\r\n\r\n        updates[`/messages/${messageId}`] = msgData;\r\n      });\r\n\r\n      const lastMsgId = Object.keys(updates).pop();\r\n\r\n      updates[`/rooms/${chatId}/lastMessage`] = {\r\n        ...updates[lastMsgId],\r\n        msgId: lastMsgId,\r\n      };\r\n\r\n      try {\r\n        await database.ref().update(updates);\r\n        setIsLoading(false);\r\n      } catch (err) {\r\n        setIsLoading(false);\r\n        Alert.error(err.message);\r\n      }\r\n    },\r\n    [chatId, profile]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <InputGroup>\r\n        <AttachmentBtnModal afterUpload={afterUpload} />\r\n        <AudioMsgBtn afterUpload={afterUpload} />\r\n        <Input\r\n          placeholder=\"Write a new message here...\"\r\n          value={input}\r\n          onChange={onInputChange}\r\n          onKeyDown={onKeyDown}\r\n        />\r\n\r\n        <InputGroup.Button\r\n          color=\"blue\"\r\n          appearance=\"primary\"\r\n          onClick={onSendClick}\r\n          disabled={isLoading}\r\n        >\r\n          <Icon icon=\"send\" />\r\n        </InputGroup.Button>\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bottom;\r\n","import React from 'react';\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport ProfileAvatar from '../../ProfileAvatar';\r\n\r\nconst ProfileInfoBtnModal = ({ profile, children, ...btnProps }) => {\r\n  const { isOpen, close, open } = useModalState();\r\n\r\n  const { name, avatar, createdAt } = profile;\r\n\r\n  const shortName = profile.name.split(' ')[0];\r\n\r\n  const memberSince = new Date(createdAt).toLocaleDateString();\r\n\r\n  return (\r\n    <>\r\n      <Button {...btnProps} onClick={open}>\r\n        {shortName}\r\n      </Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>{shortName} profile</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"text-center\">\r\n          <ProfileAvatar\r\n            src={avatar}\r\n            name={name}\r\n            className=\"width-200 height-200 img-fullsize font-huge\"\r\n          />\r\n\r\n          <h4 className=\"mt-2\">{name}</h4>\r\n\r\n          <p>Member since {memberSince}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {children}\r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileInfoBtnModal;\r\n","import React from 'react';\r\nimport { Whisper, Tooltip, Badge } from 'rsuite';\r\nimport { usePresence } from '../misc/custom-hooks';\r\n\r\nconst getColor = presence => {\r\n  if (!presence) {\r\n    return 'gray';\r\n  }\r\n\r\n  switch (presence.state) {\r\n    case 'online':\r\n      return 'green';\r\n    case 'offline':\r\n      return 'red';\r\n    default:\r\n      return 'gray';\r\n  }\r\n};\r\n\r\nconst getText = presence => {\r\n  if (!presence) {\r\n    return 'Unknown state';\r\n  }\r\n\r\n  return presence.state === 'online'\r\n    ? 'Online'\r\n    : `Last online ${new Date(presence.last_changed).toLocaleDateString()}`;\r\n};\r\n\r\nconst PresenceDot = ({ uid }) => {\r\n  const presence = usePresence(uid);\r\n\r\n  return (\r\n    <Whisper\r\n      placement=\"top\"\r\n      trigger=\"hover\"\r\n      speaker={<Tooltip>{getText(presence)}</Tooltip>}\r\n    >\r\n      <Badge\r\n        className=\"cursor-pointer\"\r\n        style={{ backgroundColor: getColor(presence) }}\r\n      />\r\n    </Whisper>\r\n  );\r\n};\r\n\r\nexport default PresenceDot;\r\n","import React from 'react';\r\nimport { Badge, Whisper, Tooltip, IconButton, Icon } from 'rsuite';\r\n\r\nconst ConditionalBadge = ({ condition, children }) => {\r\n  return condition ? <Badge content={condition}>{children}</Badge> : children;\r\n};\r\n\r\nconst IconBtnControl = ({\r\n  isVisible,\r\n  iconName,\r\n  tooltip,\r\n  onClick,\r\n  badgeContent,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"ml-2\"\r\n      style={{ visibility: isVisible ? 'visible' : 'hidden' }}\r\n    >\r\n      <ConditionalBadge condition={badgeContent}>\r\n        <Whisper\r\n          placement=\"top\"\r\n          delay={0}\r\n          delayHide={0}\r\n          delayShow={0}\r\n          trigger=\"hover\"\r\n          speaker={<Tooltip>{tooltip}</Tooltip>}\r\n        >\r\n          <IconButton\r\n            {...props}\r\n            onClick={onClick}\r\n            circle\r\n            size=\"xs\"\r\n            icon={<Icon icon={iconName} />}\r\n          />\r\n        </Whisper>\r\n      </ConditionalBadge>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IconBtnControl;\r\n","import React from 'react';\r\nimport { Modal } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\n\r\nconst ImgBtnModal = ({ src, fileName }) => {\r\n  const { isOpen, open, close } = useModalState();\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"image\"\r\n        src={src}\r\n        alt=\"file\"\r\n        onClick={open}\r\n        className=\"mw-100 mh-100 w-auto\"\r\n      />\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>{fileName}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div>\r\n            <img src={src} height=\"100%\" width=\"100%\" alt=\"file\" />\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <a href={src} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            View original\r\n          </a>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImgBtnModal;\r\n","import React, { memo } from 'react';\r\nimport TimeAgo from 'timeago-react';\r\nimport { Button } from 'rsuite';\r\nimport ProfileAvatar from '../../ProfileAvatar';\r\nimport ProfileInfoBtnModal from './ProfileInfoBtnModal';\r\nimport PresenceDot from '../../PresenceDot';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { auth } from '../../../misc/firebase';\r\nimport { useHover, useMediaQuery } from '../../../misc/custom-hooks';\r\nimport IconBtnControl from './IconBtnControl';\r\nimport ImgBtnModal from './ImgBtnModal';\r\n\r\nconst renderFileMessage = file => {\r\n  if (file.contentType.includes('image')) {\r\n    return (\r\n      <div className=\"height-220\">\r\n        <ImgBtnModal src={file.url} fileName={file.name} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (file.contentType.includes('audio')) {\r\n    return (\r\n      // eslint-disable-next-line jsx-a11y/media-has-caption\r\n      <audio controls>\r\n        <source src={file.url} type=\"audio/mp3\" />\r\n        Your browser does not support the audio element.\r\n      </audio>\r\n    );\r\n  }\r\n\r\n  return <a href={file.url}>Download {file.name}</a>;\r\n};\r\n\r\nconst MessageItem = ({ message, handleAdmin, handleLike, handleDelete }) => {\r\n  const { author, createdAt, text, file, likes, likeCount } = message;\r\n\r\n  const [selfRef, isHovered] = useHover();\r\n  const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\r\n  const admins = useCurrentRoom(v => v.admins);\r\n\r\n  const isMsgAuthorAdmin = admins.includes(author.uid);\r\n  const isAuthor = auth.currentUser.uid === author.uid;\r\n  const canGrantAdmin = isAdmin && !isAuthor;\r\n\r\n  const canShowIcons = isMobile || isHovered;\r\n  const isLiked = likes && Object.keys(likes).includes(auth.currentUser.uid);\r\n\r\n  return (\r\n    <li\r\n      className={`padded mb-1 cursor-pointer ${isHovered ? 'bg-black-02' : ''}`}\r\n      ref={selfRef}\r\n    >\r\n      <div className=\"d-flex align-items-center font-bolder mb-1\">\r\n        <PresenceDot uid={author.uid} />\r\n\r\n        <ProfileAvatar\r\n          src={author.avatar}\r\n          name={author.name}\r\n          className=\"ml-1\"\r\n          size=\"xs\"\r\n        />\r\n\r\n        <ProfileInfoBtnModal\r\n          profile={author}\r\n          appearance=\"link\"\r\n          className=\"p-0 ml-1 text-black\"\r\n        >\r\n          {canGrantAdmin && (\r\n            <Button block onClick={() => handleAdmin(author.uid)} color=\"blue\">\r\n              {isMsgAuthorAdmin\r\n                ? 'Remove admin permission'\r\n                : 'Give admin in this room'}\r\n            </Button>\r\n          )}\r\n        </ProfileInfoBtnModal>\r\n        <TimeAgo\r\n          datetime={createdAt}\r\n          className=\"font-normal text-black-45 ml-2\"\r\n        />\r\n\r\n        <IconBtnControl\r\n          {...(isLiked ? { color: 'red' } : {})}\r\n          isVisible={canShowIcons}\r\n          iconName=\"heart\"\r\n          tooltip=\"Like this message\"\r\n          onClick={() => handleLike(message.id)}\r\n          badgeContent={likeCount}\r\n        />\r\n        {isAuthor && (\r\n          <IconBtnControl\r\n            isVisible={canShowIcons}\r\n            iconName=\"close\"\r\n            tooltip=\"Delete this message\"\r\n            onClick={() => handleDelete(message.id, file)}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        {text && <span className=\"word-breal-all\">{text}</span>}\r\n        {file && renderFileMessage(file)}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default memo(MessageItem);\r\n","/* eslint-disable consistent-return */\r\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Alert, Button } from 'rsuite';\r\nimport { database, auth, storage } from '../../../misc/firebase';\r\nimport { transformToArrWithId, groupBy } from '../../../misc/helpers';\r\nimport MessageItem from './MessageItem';\r\n\r\nconst PAGE_SIZE = 15;\r\nconst messagesRef = database.ref('/messages');\r\n\r\nfunction shouldScrollToBottom(node, threshold = 30) {\r\n  const percentage =\r\n    (100 * node.scrollTop) / (node.scrollHeight - node.clientHeight) || 0;\r\n\r\n  return percentage > threshold;\r\n}\r\n\r\nconst Messages = () => {\r\n  const { chatId } = useParams();\r\n  const [messages, setMessages] = useState(null);\r\n  const [limit, setLimit] = useState(PAGE_SIZE);\r\n  const selfRef = useRef();\r\n\r\n  const isChatEmpty = messages && messages.length === 0;\r\n  const canShowMessages = messages && messages.length > 0;\r\n\r\n  const loadMessages = useCallback(\r\n    limitToLast => {\r\n      const node = selfRef.current;\r\n\r\n      messagesRef.off();\r\n\r\n      messagesRef\r\n        .orderByChild('roomId')\r\n        .equalTo(chatId)\r\n        .limitToLast(limitToLast || PAGE_SIZE)\r\n        .on('value', snap => {\r\n          const data = transformToArrWithId(snap.val());\r\n          setMessages(data);\r\n\r\n          if (shouldScrollToBottom(node)) {\r\n            node.scrollTop = node.scrollHeight;\r\n          }\r\n        });\r\n\r\n      setLimit(p => p + PAGE_SIZE);\r\n    },\r\n    [chatId]\r\n  );\r\n\r\n  const onLoadMore = useCallback(() => {\r\n    const node = selfRef.current;\r\n    const oldHeight = node.scrollHeight;\r\n\r\n    loadMessages(limit);\r\n\r\n    setTimeout(() => {\r\n      const newHeight = node.scrollHeight;\r\n      node.scrollTop = newHeight - oldHeight;\r\n    }, 200);\r\n  }, [loadMessages, limit]);\r\n\r\n  useEffect(() => {\r\n    const node = selfRef.current;\r\n\r\n    loadMessages();\r\n\r\n    setTimeout(() => {\r\n      node.scrollTop = node.scrollHeight;\r\n    }, 200);\r\n\r\n    return () => {\r\n      messagesRef.off('value');\r\n    };\r\n  }, [loadMessages]);\r\n\r\n  const handleAdmin = useCallback(\r\n    async uid => {\r\n      const adminsRef = database.ref(`/rooms/${chatId}/admins`);\r\n\r\n      let alertMsg;\r\n\r\n      await adminsRef.transaction(admins => {\r\n        if (admins) {\r\n          if (admins[uid]) {\r\n            admins[uid] = null;\r\n            alertMsg = 'Admin permission removed';\r\n          } else {\r\n            admins[uid] = true;\r\n            alertMsg = 'Admin permission granted';\r\n          }\r\n        }\r\n\r\n        return admins;\r\n      });\r\n\r\n      Alert.info(alertMsg, 4000);\r\n    },\r\n    [chatId]\r\n  );\r\n\r\n  const handleLike = useCallback(async msgId => {\r\n    const { uid } = auth.currentUser;\r\n    const messageRef = database.ref(`/messages/${msgId}`);\r\n\r\n    let alertMsg;\r\n\r\n    await messageRef.transaction(msg => {\r\n      if (msg) {\r\n        if (msg.likes && msg.likes[uid]) {\r\n          msg.likeCount -= 1;\r\n          msg.likes[uid] = null;\r\n          alertMsg = 'Like removed';\r\n        } else {\r\n          msg.likeCount += 1;\r\n\r\n          if (!msg.likes) {\r\n            msg.likes = {};\r\n          }\r\n\r\n          msg.likes[uid] = true;\r\n          alertMsg = 'Like added';\r\n        }\r\n      }\r\n\r\n      return msg;\r\n    });\r\n\r\n    Alert.info(alertMsg, 4000);\r\n  }, []);\r\n\r\n  const handleDelete = useCallback(\r\n    async (msgId, file) => {\r\n      // eslint-disable-next-line no-alert\r\n      if (!window.confirm('Delete this message?')) {\r\n        return;\r\n      }\r\n\r\n      const isLast = messages[messages.length - 1].id === msgId;\r\n\r\n      const updates = {};\r\n\r\n      updates[`/messages/${msgId}`] = null;\r\n\r\n      if (isLast && messages.length > 1) {\r\n        updates[`/rooms/${chatId}/lastMessage`] = {\r\n          ...messages[messages.length - 2],\r\n          msgId: messages[messages.length - 2].id,\r\n        };\r\n      }\r\n\r\n      if (isLast && messages.length === 1) {\r\n        updates[`/rooms/${chatId}/lastMessage`] = null;\r\n      }\r\n\r\n      try {\r\n        await database.ref().update(updates);\r\n\r\n        Alert.info('Message has been deleted');\r\n      } catch (err) {\r\n        return Alert.error(err.message);\r\n      }\r\n\r\n      if (file) {\r\n        try {\r\n          const fileRef = storage.refFromURL(file.url);\r\n          await fileRef.delete();\r\n        } catch (err) {\r\n          Alert.error(err.message);\r\n        }\r\n      }\r\n    },\r\n    [chatId, messages]\r\n  );\r\n\r\n  const renderMessages = () => {\r\n    const groups = groupBy(messages, item =>\r\n      new Date(item.createdAt).toDateString()\r\n    );\r\n\r\n    const items = [];\r\n\r\n    Object.keys(groups).forEach(date => {\r\n      items.push(\r\n        <li key={date} className=\"text-center mb-1 padded\">\r\n          {date}\r\n        </li>\r\n      );\r\n\r\n      const msgs = groups[date].map(msg => (\r\n        <MessageItem\r\n          key={msg.id}\r\n          message={msg}\r\n          handleAdmin={handleAdmin}\r\n          handleLike={handleLike}\r\n          handleDelete={handleDelete}\r\n        />\r\n      ));\r\n\r\n      items.push(...msgs);\r\n    });\r\n\r\n    return items;\r\n  };\r\n\r\n  return (\r\n    <ul ref={selfRef} className=\"msg-list custom-scroll\">\r\n      {messages && messages.length >= PAGE_SIZE && (\r\n        <li className=\"text-center mt-2 mb-2\">\r\n          <Button onClick={onLoadMore} color=\"green\">\r\n            Load more\r\n          </Button>\r\n        </li>\r\n      )}\r\n      {isChatEmpty && <li>No messages yet</li>}\r\n      {canShowMessages && renderMessages()}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Loader } from 'rsuite';\r\n\r\nimport ChatTop from '../../components/chat-window/top';\r\nimport ChatBottom from '../../components/chat-window/bottom';\r\nimport Messages from '../../components/chat-window/messages';\r\nimport { useRooms } from '../../context/rooms.context';\r\nimport { CurrentRoomProvider } from '../../context/current-room.context';\r\nimport { transformToArr } from '../../misc/helpers';\r\nimport { auth } from '../../misc/firebase';\r\n\r\nconst Chat = () => {\r\n  const { chatId } = useParams();\r\n\r\n  const rooms = useRooms();\r\n\r\n  if (!rooms) {\r\n    return <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />;\r\n  }\r\n\r\n  const currentRoom = rooms.find(room => room.id === chatId);\r\n\r\n  if (!currentRoom) {\r\n    return <h6 className=\"text-center mt-page\">Chat {chatId} not found</h6>;\r\n  }\r\n\r\n  const { name, description } = currentRoom;\r\n\r\n  const admins = transformToArr(currentRoom.admins);\r\n  const isAdmin = admins.includes(auth.currentUser.uid);\r\n\r\n  const currentRoomData = {\r\n    name,\r\n    description,\r\n    admins,\r\n    isAdmin,\r\n  };\r\n\r\n  return (\r\n    <CurrentRoomProvider data={currentRoomData}>\r\n      <div className=\"chat-top\">\r\n        <ChatTop />\r\n      </div>\r\n      <div className=\"chat-middle\">\r\n        <Messages />\r\n      </div>\r\n      <div className=\"chat-bottom\">\r\n        <ChatBottom />\r\n      </div>\r\n    </CurrentRoomProvider>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React from 'react';\r\nimport { Grid, Row, Col } from 'rsuite';\r\nimport { Switch, Route, useRouteMatch } from 'react-router';\r\nimport Sidebar from '../../components/Sidebar';\r\nimport { RoomsProvider } from '../../context/rooms.context';\r\nimport Chat from './Chat';\r\nimport { useMediaQuery } from '../../misc/custom-hooks';\r\n\r\nconst Home = () => {\r\n  const isDesktop = useMediaQuery('(min-width: 992px)');\r\n  const { isExact } = useRouteMatch();\r\n\r\n  const canRenderSidebar = isDesktop || isExact;\r\n\r\n  return (\r\n    <RoomsProvider>\r\n      <Grid fluid className=\"h-100\">\r\n        <Row className=\"h-100\">\r\n          {canRenderSidebar && (\r\n            <Col xs={24} md={8} className=\"h-100\">\r\n              <Sidebar />\r\n            </Col>\r\n          )}\r\n\r\n          <Switch>\r\n            <Route exact path=\"/chat/:chatId\">\r\n              <Col xs={24} md={16} className=\"h-100\">\r\n                <Chat />\r\n              </Col>\r\n            </Route>\r\n            <Route>\r\n              {isDesktop && (\r\n                <Col xs={24} md={16} className=\"h-100\">\r\n                  <h6 className=\"text-center mt-page\">Please select chat</h6>\r\n                </Col>\r\n              )}\r\n            </Route>\r\n          </Switch>\r\n        </Row>\r\n      </Grid>\r\n    </RoomsProvider>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nconst PublicRoute = ({ children, ...routeProps }) => {\r\n  const { profile, isLoading } = useProfile();\r\n\r\n  if (isLoading && !profile) {\r\n    return (\r\n      <Container>\r\n        <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (profile && !isLoading) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return <Route {...routeProps}>{children}</Route>;\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React from 'react';\r\n\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\nimport './styles/main.scss';\r\nimport { Switch } from 'react-router';\r\nimport SignIn from './pages/SignIn';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport Home from './pages/Home';\r\nimport PublicRoute from './components/PublicRoute';\r\nimport { ProfileProvider } from './context/profile.context';\r\n\r\nfunction App() {\r\n  return (\r\n    <ProfileProvider>\r\n      <Switch>\r\n        <PublicRoute path=\"/signin\">\r\n          <SignIn />\r\n        </PublicRoute>\r\n        <PrivateRoute path=\"/\">\r\n          <Home />\r\n        </PrivateRoute>\r\n      </Switch>\r\n    </ProfileProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\n// import * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}